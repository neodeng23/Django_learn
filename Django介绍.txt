Django包含组件如下：
    1.基本配置文件/路由系统
    2.模型层(M)/模板层(T)/视图层(V)
    3.Cookies和Session
    4.分页及发邮件
    5.Admin管理后台

目录说明：
    one: 项目的容器。
    __init__.py: 一个空文件，告诉 Python 该目录是一个 Python 包。
    manage.py: 一个实用的命令行工具，可让你以各种方式与该 Django 项目进行交互。

    settings.py: 该项目的配置文件
    urls.py: 项目的主路由配置
    wsgi.py: WEB服务网关的配置文件，一个 WSGI 兼容的 Web 服务器的入口，以便运行你的项目。

pip install django==2.2.12
python -m django --version
django-admin startproject mysitename # 建立项目
python manage.py runserver 5000 # 启动项目（devlop类型，不具备并发能力）


# 关闭
sudo lsof -i:进程id
kill -9 进程id


setting.py
    包含了项目启动的所有配置项
    配置项分为公有配置和自定义配置
    配置格式： BASE_DIR = 'xxx'
    公有配置 - 官方提供的基础配置

URL
    表示互联网上某个资源的地址
    一般语法格式为：
        protocal://hostname[:port]/path[?query][#fragment]
        1.协议  2.ip地址  3.端口号  4.路由  5.查询字符串，给服务端带数据  6.快速定位标题栏
            http默认端口为80
            path
                若路由不存在会报404
            ?query
                以?号开头，问号后均为查询字符串，格式类似key=value，用&符隔开，表明有多个
                把信息描述得更加具体
            #fragment（信息片段/锚点）
                以#号开头，#号后就是锚点，定位到网页中得的对应位置

    处理URL请求
        根据ROOT_URLCONF找到主路由文件，加载文件中的urlpatterns变量（包含很多路由的数组）,依次匹配urlpatterns中的path，匹配到第一个合适的终端后续匹配
        匹配成功-调用对应的视图函数处理请求，返回响应
        匹配失败-返回404响应


请求：
    请求在Django中实则就是视图函数的第一个参数，即HTTPRequest对象
    Django接收到http协议的请求后，会根据请求数据报文创建HTTPRequest对象
    HTTPRequest对象通过属性描述了请求的所有相关信息

    path_info:  URL字符串
    method： 字符串，表示HTTP请求方法，常用：GET, POST
        GET: QueryDict查询字典的对象，包含get请求方式的所有数据
        POST: QueryDict查询字典的对象，包含post请求方式的所有数据
        FILES: 用于上传文件

响应
    起始行和响应体
    状态码:
        200 - 请求成功
        301 - 永久重定向-资源（网页等）被永久转移到其他URL
        302 - 临时重定向
        404 - 请求的资源（网页等）不存在
        500 - 内部服务器错误

        1** - 信息，服务器收到请求，需要请求者继续执行操作
        2** - 成功，操作被成功接收并处理
        3** - 重定向，需要进一步的操作以完成请求
        4** - 客户端错误，请求包含语法错误或无法完成请求
        5** - 服务器错误，服务器在处理请求的过程中发生了错误

    构造函数格式：
        HttpResponse(content=响应体,content_type=响应体数据类型,status=状态码)
        作用：向客户端浏览器返回响应，同时携带响应体内容
        content_type:指定返回数据的MIME类型（默认为"text/html"），浏览器会根据这个属性，来显示数据，如果时text/html，那么就会解析这个字符串，如果时text/plain那就会显示一个纯文本
            常用的content_type如下：
                text/html
                text/plain
                text/css
                text/javascript
                multipart/form-data
                application/json
                application/xml
        子类
            HttpResponseRedirect    重定向 302
            HttpResponseNotModified 未修改 304
            HttpResponseBadRequest  错误请求    400
            HttpResponseNotFound    没有对应的资源 404
            HttpResponseForbidden   请求被禁止   403
            HttpResponseServerError 服务器错误   500


请求：
    POST请求动作，一般用于向服务器提交大量/隐私数据
    客户端通过表单等POST请求将数据传递给服务端，如：
        <form method='post' action='/login'>
            姓名:<input type="text" name="username">
            <input type='submit' value="登录">
        </form>




